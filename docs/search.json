[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Watal M. Iwasaki Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Watal M. Iwasaki. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Iwasaki W (2023). igraphlite: Lightweight R Interface Igraph Network Analysis Library. https://heavywatal.github.io/rigraphlite/, https://github.com/heavywatal/rigraphlite.","code":"@Manual{,   title = {igraphlite: Lightweight R Interface to Igraph Network Analysis Library},   author = {Watal M. Iwasaki},   year = {2023},   note = {https://heavywatal.github.io/rigraphlite/, https://github.com/heavywatal/rigraphlite}, }"},{"path":"/index.html","id":"igraphlite","dir":"","previous_headings":"","what":"Lightweight R Interface to Igraph Network Analysis Library","title":"Lightweight R Interface to Igraph Network Analysis Library","text":"igraphlite Rcpp-powered R package interface igraph network analysis library. fork existing R igraph package, reboot scratch striving good performance, simple codebase, consistency C implementation.","code":""},{"path":"/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Lightweight R Interface to Igraph Network Analysis Library","text":"Unix-like environment (macOS, Linux, WSL, MinGW MSYS2, etc.) C++14 compiler (clang++ >= Apple LLVM 8.1, g++ >= 5.3) CMake (>= 3.18.0) R igraph package C igraph library: igraphlite first tries find_package() ${IGRAPH_INSTALL_PREFIX} ${CMAKE_PREFIX_PATH}; found, builds installs appropriate version automatically.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Lightweight R Interface to Igraph Network Analysis Library","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"heavywatal/rigraphlite\")"},{"path":"/reference/adjlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacency lists — as_adjlist","title":"Adjacency lists — as_adjlist","text":"functions -vertices version neighbors() incident().","code":""},{"path":"/reference/adjlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacency lists — as_adjlist","text":"","code":"as_adjlist(graph, mode = 3L, loops = 1L, multiple = TRUE)  as_inclist(graph, mode = 3L, loops = 1L)"},{"path":"/reference/adjlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Adjacency lists — as_adjlist","text":"https://igraph.org/c/doc/igraph-Data-structures.html#igraph-Adjlists","code":""},{"path":"/reference/adjlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjacency lists — as_adjlist","text":"graph IGraph object. mode Edge type count; 1: , 2: , 3: . loops treat loop edges; 0: NO_LOOPS, 1: LOOPS, 2: LOOPS_ONCE multiple Boolean, whether keep multiple (parallel) edges.","code":""},{"path":"/reference/adjlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjacency lists — as_adjlist","text":"as_adjlist(): Convert graph list adjacent vertices. as_inclist(): Convert graph list incident edges.","code":""},{"path":[]},{"path":"/reference/as_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create graph from R objects — graph_from_data_frame","title":"Create graph from R objects — graph_from_data_frame","text":"Create graph R objects","code":""},{"path":"/reference/as_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create graph from R objects — graph_from_data_frame","text":"","code":"graph_from_data_frame(df, directed = TRUE)  graph_from_symbolic_edgelist(edgelist, directed = TRUE)  graph_from_edgelist(edgelist, directed = TRUE)  as_igraph(x)  # S3 method for default as_igraph(x)  # S3 method for matrix as_igraph(x)  # S3 method for data.frame as_igraph(x)"},{"path":"/reference/as_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create graph from R objects — graph_from_data_frame","text":"df data.frame includes edgelist edge attributes. directed Boolean edgelist Two-column matrix. x vector, matrix, data.frame.","code":""},{"path":[]},{"path":"/reference/attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set vertex and edge attributes — vertex_attr","title":"Get and set vertex and edge attributes — vertex_attr","text":"Get set vertex edge attributes","code":""},{"path":"/reference/attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set vertex and edge attributes — vertex_attr","text":"","code":"vertex_attr(graph, name)  vertex_attr(graph, name) <- value  edge_attr(graph, name)  edge_attr(graph, name) <- value"},{"path":"/reference/attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set vertex and edge attributes — vertex_attr","text":"graph IGraph object. name Name attribute query set. missing, attributes returned replaced. value vector data.frame.","code":""},{"path":"/reference/basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Query Operations — vcount","title":"Basic Query Operations — vcount","text":"Basic Query Operations","code":""},{"path":"/reference/basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Query Operations — vcount","text":"","code":"vcount(graph)  ecount(graph)  edge(graph, eid)  neighbors(graph, vid, mode = 3L)  incident(graph, vid, mode = 3L)  is_directed(graph)  degree(graph, vids = integer(0), mode = 3L, loops = TRUE)"},{"path":"/reference/basic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Basic Query Operations — vcount","text":"https://igraph.org/c/doc/igraph-Basic.html","code":""},{"path":"/reference/basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Query Operations — vcount","text":"graph IGraph object. eid Edges interest. vid Vertices interest. mode Edge type count; 1: , 2: , 3: . vids Vertices interest. loops whether self-loop counted.","code":""},{"path":"/reference/basic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Query Operations — vcount","text":"vcount(): number vertices graph. ecount(): number edges graph. edge(): Gives head tail vertices edge. neighbors(): Adjacent vertices vertex. incident(): Gives incident edges vertex. is_directed(): directed graph? degree(): degree vertices graph.","code":""},{"path":[]},{"path":"/reference/common_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Common parameters used throughout the package — common_params","title":"Common parameters used throughout the package — common_params","text":"function nothing. designed used @inheritParams.","code":""},{"path":"/reference/common_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common parameters used throughout the package — common_params","text":"","code":"common_params(graph, vids, v, from, to, mode, weights, directed)"},{"path":"/reference/common_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common parameters used throughout the package — common_params","text":"graph IGraph object. vids Vertices interest. Vertices interest. Vertices interest. mode Edge type count; 1: , 2: , 3: . weights Numeric edge weights; TRUE use graph$Eattr$weight. directed Boolean, whether consider directed paths. Ignored undirected graphs. vid Vertices interest. eids Edges interest. eid Edges interest. loops treat loop edges; 0: NO_LOOPS, 1: LOOPS, 2: LOOPS_ONCE multiple Boolean, whether keep multiple (parallel) edges.","code":""},{"path":"/reference/component.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph Components — subcomponent","title":"Graph Components — subcomponent","text":"Graph Components","code":""},{"path":"/reference/component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph Components — subcomponent","text":"","code":"subcomponent(graph, vid, mode = 1L)  subcomponents(graph, vids, mode = 1L)  induced_subgraph(graph, vids, impl = 0L)"},{"path":"/reference/component.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Graph Components — subcomponent","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph Components — subcomponent","text":"graph IGraph object. vid Vertices interest. mode Edge type count; 1: , 2: , 3: . vids Vertices interest. impl construct new graph: 0: AUTO, 1: COPY_AND_DELETE, 2: CREATE_FROM_SCRATCH","code":""},{"path":"/reference/connected.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Properties — are_connected","title":"Basic Properties — are_connected","text":"Basic Properties","code":""},{"path":"/reference/connected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Properties — are_connected","text":"","code":"are_connected(graph, from, to)"},{"path":"/reference/connected.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Basic Properties — are_connected","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/connected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Properties — are_connected","text":"graph IGraph object. Vertices interest. Vertices interest.","code":""},{"path":"/reference/experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Experimental functions — find_common_ancestors","title":"Experimental functions — find_common_ancestors","text":"Experimental functions","code":""},{"path":"/reference/experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experimental functions — find_common_ancestors","text":"","code":"find_common_ancestors(graph, vids)  upstream_vertices(graph, vids, to_mrca = TRUE)"},{"path":"/reference/experimental.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Experimental functions — find_common_ancestors","text":"graph IGraph object. vids Vertices interest. to_mrca Boolean.","code":""},{"path":"/reference/generators.html","id":null,"dir":"Reference","previous_headings":"","what":"Deterministic Graph Generators — graph_create","title":"Deterministic Graph Generators — graph_create","text":"Deterministic Graph Generators","code":""},{"path":"/reference/generators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deterministic Graph Generators — graph_create","text":"","code":"graph_create(edges, n = 0L, directed = TRUE)  graph_star(n, mode = 0L, center = 1L)  graph_lattice(   dim,   nei = 1L,   directed = FALSE,   mutual = FALSE,   circular = FALSE )  graph_ring(n, directed = FALSE, mutual = FALSE, circular = TRUE)  graph_tree(n, children = 2L, mode = 0L)  graph_full(n, directed = FALSE, mutual = FALSE)  graph_famous(name)"},{"path":"/reference/generators.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Deterministic Graph Generators — graph_create","text":"https://igraph.org/c/doc/igraph-Generators.html","code":""},{"path":"/reference/generators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deterministic Graph Generators — graph_create","text":"edges edges add, first two elements first edge, etc. n Integer, number vertices graph. directed Boolean mode Integer; igraph_star_mode_t \\0: , 1: , 2: MUTUAL, 3: UNDIRECTED\\ igraph_tree_mode_t \\0: , 1: , 2: UNDIRECTED\\ center Id vertex center graph. dim Vector giving sizes lattice dimensions. nei Integer distance within two vertices connected. mutual Boolean circular Boolean children Integer, number children vertex tree. name \\Bull, Chvatal, Coxeter, Cubical, Diamond, Dodecahedral, Dodecahedron, Folkman, Franklin, Frucht, Grotzsch, Heawood, Herschel, House, HouseX, Icosahedral, Icosahedron, Krackhardt_Kite, Levi, McGee, Meredith, Noperfectmatching, Nonline, Octahedral, Octahedron, Petersen, Robertson, Smallestcyclicgroup, Tetrahedral, Tetrahedron, Thomassen, Tutte, Uniquely3colorable, Walther, Zachary\\","code":""},{"path":[]},{"path":"/reference/igraph-class.html","id":null,"dir":"Reference","previous_headings":"","what":"IGraph class: thin wrapper of igraph_t. — IGraph","title":"IGraph class: thin wrapper of igraph_t. — IGraph","text":"IGraph class: thin wrapper igraph_t.","code":""},{"path":"/reference/igraph-class.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IGraph class: thin wrapper of igraph_t. — IGraph","text":"Reference Class (RC) exposed Rcpp Modules.","code":""},{"path":"/reference/igraph-class.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IGraph class: thin wrapper of igraph_t. — IGraph","text":"https://github.com/igraph/igraph/blob/master/include/igraph_datatype.h","code":""},{"path":"/reference/igraph-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"IGraph class: thin wrapper of igraph_t. — IGraph","text":"V Vertex IDs integer vector E Edge IDs integer vector Vattr Vertex attributes data.frame Eattr Edge attributes data.frame first column edge list. second column edge list. oi index edge list first column. ii index edge list second column. os pointers outgoing edges. pointers incoming edges.","code":""},{"path":[]},{"path":"/reference/igraphlite-package.html","id":null,"dir":"Reference","previous_headings":"","what":"igraphlite: Lightweight R Interface to Igraph Network Analysis Library — igraphlite-package","title":"igraphlite: Lightweight R Interface to Igraph Network Analysis Library — igraphlite-package","text":"Rcpp-powered R package interface igraph network analysis library. fork existing R igraph package, reboot scratch striving good performance, simple codebase, consistency C implementation.","code":""},{"path":[]},{"path":"/reference/igraphlite-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"igraphlite: Lightweight R Interface to Igraph Network Analysis Library — igraphlite-package","text":"Maintainer: Watal M. Iwasaki heavywatal@gmail.com (ORCID)","code":""},{"path":"/reference/is_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is IGraph class — is_igraph","title":"Check if an object is IGraph class — is_igraph","text":"Check object IGraph class","code":""},{"path":"/reference/is_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is IGraph class — is_igraph","text":"","code":"is_igraph(x)"},{"path":"/reference/is_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is IGraph class — is_igraph","text":"x object tested.","code":""},{"path":"/reference/layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Layouts for Graph Drawing — layout_nicely","title":"Layouts for Graph Drawing — layout_nicely","text":"Layouts Graph Drawing","code":""},{"path":"/reference/layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layouts for Graph Drawing — layout_nicely","text":"","code":"layout_nicely(graph, ...)  layout_random(graph)  layout_drl(graph)  layout_fruchterman_reingold(graph, grid = 2L)  layout_mds(graph)  layout_reingold_tilford(graph, mode = 1L, roots = integer(0))  layout_reingold_tilford_circular(graph, mode = 1L, roots = integer(0))"},{"path":"/reference/layout.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Layouts for Graph Drawing — layout_nicely","text":"https://igraph.org/c/doc/igraph-Layout.html","code":""},{"path":"/reference/layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layouts for Graph Drawing — layout_nicely","text":"graph IGraph object. ... Passed internal layout function. grid Whether use (fast less accurate) grid based version; 0: GRID, 1: NOGRID, 2: AUTOGRID. mode Edge type count; 1: , 2: , 3: . roots Root vertices.","code":""},{"path":"/reference/neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighborhood of vertices — neighborhood_size","title":"Neighborhood of vertices — neighborhood_size","text":"Neighborhood vertices","code":""},{"path":"/reference/neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighborhood of vertices — neighborhood_size","text":"","code":"neighborhood_size(   graph,   vids = integer(0),   order = 1L,   mode = 1L,   mindist = 0L )  neighborhood(graph, vids = integer(0), order = 1L, mode = 1L, mindist = 0L)"},{"path":"/reference/neighborhood.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Neighborhood of vertices — neighborhood_size","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighborhood of vertices — neighborhood_size","text":"graph IGraph object. vids Vertices interest. order integer mode Edge type count; 1: , 2: , 3: . mindist minimum distance include vertex counting.","code":""},{"path":"/reference/phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between phylo and igraph — as_igraph.phylo","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"Conversion phylo igraph","code":""},{"path":"/reference/phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"","code":"# S3 method for phylo as_igraph(x)  as_phylo(x)"},{"path":"/reference/phylo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"https://cran.r-project.org/package=ape","code":""},{"path":"/reference/phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"x object convert.","code":""},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for quick visualization — augment.Rcpp_IGraph","title":"Methods for quick visualization — augment.Rcpp_IGraph","text":"Methods quick visualization","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for quick visualization — augment.Rcpp_IGraph","text":"","code":"# S3 method for Rcpp_IGraph augment(x, layout = NULL, ...)  # S3 method for Rcpp_IGraph plot(x, ..., lwd = 0.5, cex = 5, col = \"#cccccc\", pch = 16)"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for quick visualization — augment.Rcpp_IGraph","text":"x Rcpp_Igraph object. layout function resulting data.frame. provided, layout_nicely applied. ... passed augment layout function. lwd passed ggplot2::geom_segment. cex, col, pch passed ggplot2::geom_point ggplot2::geom_text.","code":""},{"path":"/reference/random.html","id":null,"dir":"Reference","previous_headings":"","what":"Random numbers — rng_seed","title":"Random numbers — rng_seed","text":"Random numbers","code":""},{"path":"/reference/random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random numbers — rng_seed","text":"","code":"rng_seed(seed)"},{"path":"/reference/random.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Random numbers — rng_seed","text":"https://igraph.org/c/doc/igraph-Random.html","code":""},{"path":"/reference/random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random numbers — rng_seed","text":"seed integer.","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment","code":""},{"path":"/reference/shortest_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortest Path Related Functions — distances","title":"Shortest Path Related Functions — distances","text":"Shortest Path Related Functions","code":""},{"path":"/reference/shortest_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortest Path Related Functions — distances","text":"","code":"distances(   graph,   from = integer(0L),   to = from,   weights = numeric(0L),   mode = 3L,   algorithm = c(\"auto\", \"unweighted\", \"dijkstra\", \"bellman-ford\", \"johnson\") )  shortest_paths(graph, ...)  get_shortest_paths(   graph,   from,   to = integer(0L),   weights = numeric(0L),   mode = 3L )  get_all_shortest_paths(   graph,   from,   to = integer(0L),   weights = numeric(0L),   mode = 3L )  get_all_simple_paths(graph, from, to = integer(0L), cutoff = -1L, mode = 3L)  average_path_length(graph, directed = FALSE)  path_length_hist(graph, directed = FALSE)"},{"path":"/reference/shortest_paths.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Shortest Path Related Functions — distances","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/shortest_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortest Path Related Functions — distances","text":"graph IGraph object. Vertices interest. Vertices interest. weights Numeric edge weights; TRUE use graph$Eattr$weight. mode Edge type count; 1: , 2: , 3: . algorithm character ... passed distances cutoff integer directed Boolean, whether consider directed paths. Ignored undirected graphs.","code":""},{"path":"/reference/tbl_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"Conversion tbl_tree igraph","code":""},{"path":"/reference/tbl_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"","code":"# S3 method for tbl_tree as_igraph(x)  as_tbl_tree(x)"},{"path":"/reference/tbl_tree.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"https://cran.r-project.org/package=tidytree","code":""},{"path":"/reference/tbl_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"x object convert.","code":""},{"path":"/reference/version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and return igraph version.h — igraph_version","title":"Check and return igraph version.h — igraph_version","text":"Check return igraph version.h","code":""},{"path":"/reference/version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and return igraph version.h — igraph_version","text":"","code":"igraph_version()"},{"path":"/reference/version.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Check and return igraph version.h — igraph_version","text":"https://igraph.org/c/doc/igraph-Nongraph.html","code":""},{"path":"/reference/vnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Convesion between vertex IDs and names — Vnames","title":"Convesion between vertex IDs and names — Vnames","text":"Convesion vertex IDs names","code":""},{"path":"/reference/vnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convesion between vertex IDs and names — Vnames","text":"","code":"Vnames(graph)  as_vids(graph, vnames)  as_vnames(graph, vids = graph$V)"},{"path":"/reference/vnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convesion between vertex IDs and names — Vnames","text":"graph IGraph object. vnames Vertex names stored Vattr[[\"name\"]]. vids Vertices interest.","code":""}]
