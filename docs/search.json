[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Watal M. Iwasaki Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Watal M. Iwasaki. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Iwasaki W (2024). igraphlite: Lightweight R Interface Igraph Network Analysis Library. R package version 0.10.12, https://github.com/heavywatal/rigraphlite, https://heavywatal.github.io/rigraphlite/.","code":"@Manual{,   title = {igraphlite: Lightweight R Interface to Igraph Network Analysis Library},   author = {Watal M. Iwasaki},   year = {2024},   note = {R package version 0.10.12, https://github.com/heavywatal/rigraphlite},   url = {https://heavywatal.github.io/rigraphlite/}, }"},{"path":"/index.html","id":"igraphlite","dir":"","previous_headings":"","what":"Lightweight R Interface to Igraph Network Analysis Library","title":"Lightweight R Interface to Igraph Network Analysis Library","text":"igraphlite cpp11-powered R package interface igraph network analysis library. fork existing R igraph package, reboot scratch striving good performance, simple codebase, consistency C implementation.","code":""},{"path":"/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Lightweight R Interface to Igraph Network Analysis Library","text":"Unix-like environment (macOS, Linux, WSL, MinGW MSYS2, etc.) C++14 compiler (clang++ >= Apple LLVM 8.1, g++ >= 5.3) CMake (>= 3.18.0) R igraph package C igraph library: igraphlite first tries find_package() ${igraph_ROOT} ${CMAKE_PREFIX_PATH}; found, builds installs appropriate version automatically.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Lightweight R Interface to Igraph Network Analysis Library","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"heavywatal/rigraphlite\")"},{"path":"/reference/adjlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacency lists — as_adjlist","title":"Adjacency lists — as_adjlist","text":"functions -vertices version neighbors() incident().","code":""},{"path":"/reference/adjlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacency lists — as_adjlist","text":"","code":"as_adjlist(graph, mode = 3L, loops = 1L, multiple = 1L)  as_inclist(graph, mode = 3L, loops = 1L)"},{"path":"/reference/adjlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Adjacency lists — as_adjlist","text":"https://igraph.org/c/doc/igraph-Data-structures.html#igraph-Adjlists","code":""},{"path":"/reference/adjlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjacency lists — as_adjlist","text":"graph igraph_ptr object. mode Edge type count; {1: , 2: , 3: }. loops treat loop edges; {0: NO_LOOPS, 1: LOOPS, 2: LOOPS_ONCE} multiple Boolean, whether keep multiple (parallel) edges.","code":""},{"path":"/reference/adjlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjacency lists — as_adjlist","text":"as_adjlist(): Convert graph list adjacent vertices. as_inclist(): Convert graph list incident edges.","code":""},{"path":[]},{"path":"/reference/as_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create graph from R objects — as_igraph","title":"Create graph from R objects — as_igraph","text":"Create graph R objects","code":""},{"path":"/reference/as_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create graph from R objects — as_igraph","text":"","code":"as_igraph(x)  # S3 method for default as_igraph(x)  # S3 method for matrix as_igraph(x)  # S3 method for data.frame as_igraph(x)  graph_from_data_frame(df, directed = TRUE)  graph_from_symbolic_edgelist(edgelist, directed = TRUE)  graph_from_edgelist(edgelist, directed = TRUE)"},{"path":"/reference/as_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create graph from R objects — as_igraph","text":"x vector, matrix, data.frame. df data.frame includes edgelist edge attributes. directed Boolean edgelist Two-column matrix.","code":""},{"path":[]},{"path":"/reference/attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set vertex and edge attributes — Vattr","title":"Get and set vertex and edge attributes — Vattr","text":"Get set vertex edge attributes","code":""},{"path":"/reference/attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set vertex and edge attributes — Vattr","text":"","code":"Vattr(graph, name)  Vattr(graph, name) <- value  Eattr(graph, name)  Eattr(graph, name) <- value  V(graph)  E(graph)"},{"path":"/reference/attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set vertex and edge attributes — Vattr","text":"graph igraph_ptr object. name Name attribute query set. missing, attributes returned replaced. value vector data.frame.","code":""},{"path":"/reference/basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Query Operations — vcount","title":"Basic Query Operations — vcount","text":"Basic Query Operations","code":""},{"path":"/reference/basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Query Operations — vcount","text":"","code":"vcount(graph)  ecount(graph)  igraph_from(graph)  igraph_to(graph)  edge(graph, eid)  neighbors(graph, vid, mode = 3L)  incident(graph, vid, mode = 3L)  is_directed(graph)  degree(graph, vids = integer(0), mode = 3L, loops = TRUE)  add_vertices(graph, n)  add_edges(graph, eids)  delete_vertices(graph, vids)  delete_edges(graph, eids)"},{"path":"/reference/basic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Basic Query Operations — vcount","text":"https://igraph.org/c/doc/igraph-Basic.html","code":""},{"path":"/reference/basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Query Operations — vcount","text":"graph igraph_ptr object. eid Edges interest. vid Vertices interest. mode Edge type count; {1: , 2: , 3: }. vids Vertices interest. loops whether self-loop counted. n number vertices add. eids Edges interest.","code":""},{"path":"/reference/basic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Query Operations — vcount","text":"vcount(): number vertices graph. ecount(): number edges graph. edge(): Gives head tail vertices edge. neighbors(): Adjacent vertices vertex. incident(): Gives incident edges vertex. is_directed(): directed graph? degree(): degree vertices graph.","code":""},{"path":[]},{"path":"/reference/centrality.html","id":null,"dir":"Reference","previous_headings":"","what":"Centrality measures — edge_betweenness","title":"Centrality measures — edge_betweenness","text":"Centrality measures","code":""},{"path":"/reference/centrality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centrality measures — edge_betweenness","text":"","code":"edge_betweenness(graph, directed = is_directed(graph), weights = numeric(0))  edge_betweenness_subset(   graph,   directed = is_directed(graph),   eids = integer(0),   weights = numeric(0),   from = integer(0),   to = integer(0) )"},{"path":"/reference/centrality.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Centrality measures — edge_betweenness","text":"https://igraph.org/c/doc/igraph-Structural.html#centrality-measures","code":""},{"path":"/reference/centrality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centrality measures — edge_betweenness","text":"graph igraph_ptr object. directed Boolean, whether consider directed paths. Ignored undirected graphs. weights Numeric edge weights; TRUE use Eattr(graph, \"weight\"). eids Edges interest. Vertices interest. Vertices interest.","code":""},{"path":"/reference/common_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Common parameters used throughout the package — common_params","title":"Common parameters used throughout the package — common_params","text":"function nothing. designed used @inheritParams.","code":""},{"path":"/reference/common_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common parameters used throughout the package — common_params","text":"","code":"common_params(   graph,   vids,   vid,   from,   to,   eids,   eid,   mode,   weights,   directed,   loops,   multiple )"},{"path":"/reference/common_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common parameters used throughout the package — common_params","text":"graph igraph_ptr object. vids Vertices interest. vid Vertices interest. Vertices interest. Vertices interest. eids Edges interest. eid Edges interest. mode Edge type count; {1: , 2: , 3: }. weights Numeric edge weights; TRUE use Eattr(graph, \"weight\"). directed Boolean, whether consider directed paths. Ignored undirected graphs. loops treat loop edges; {0: NO_LOOPS, 1: LOOPS, 2: LOOPS_ONCE} multiple Boolean, whether keep multiple (parallel) edges.","code":""},{"path":"/reference/component.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph Components — subcomponent","title":"Graph Components — subcomponent","text":"Graph Components","code":""},{"path":"/reference/component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph Components — subcomponent","text":"","code":"subcomponent(graph, vid, mode = 1L)  subcomponents(graph, vids, mode = 1L)  induced_subgraph(graph, vids, impl = 0L)"},{"path":"/reference/component.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Graph Components — subcomponent","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph Components — subcomponent","text":"graph igraph_ptr object. vid Vertices interest. mode Edge type count; {1: , 2: , 3: }. vids Vertices interest. impl construct new graph: {0: AUTO, 1: COPY_AND_DELETE, 2: CREATE_FROM_SCRATCH}","code":""},{"path":"/reference/connected.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Properties — are_adjacent","title":"Basic Properties — are_adjacent","text":"Basic Properties","code":""},{"path":"/reference/connected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Properties — are_adjacent","text":"","code":"are_adjacent(graph, from, to)"},{"path":"/reference/connected.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Basic Properties — are_adjacent","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/connected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Properties — are_adjacent","text":"graph igraph_ptr object. Vertices interest. Vertices interest.","code":""},{"path":"/reference/experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Experimental functions — find_common_ancestors","title":"Experimental functions — find_common_ancestors","text":"Experimental functions","code":""},{"path":"/reference/experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experimental functions — find_common_ancestors","text":"","code":"find_common_ancestors(graph, vids)  upstream_vertices(graph, vids, to_mrca = TRUE)"},{"path":"/reference/experimental.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Experimental functions — find_common_ancestors","text":"graph igraph_ptr object. vids Vertices interest. to_mrca Boolean.","code":""},{"path":"/reference/generators.html","id":null,"dir":"Reference","previous_headings":"","what":"Deterministic Graph Generators — graph_create","title":"Deterministic Graph Generators — graph_create","text":"Deterministic Graph Generators","code":""},{"path":"/reference/generators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deterministic Graph Generators — graph_create","text":"","code":"graph_create(edges, n = 0L, directed = TRUE)  graph_star(n, mode = 0L, center = 1L)  graph_lattice(   dim,   nei = 1L,   directed = FALSE,   mutual = FALSE,   circular = FALSE )  graph_ring(n, directed = FALSE, mutual = FALSE, circular = TRUE)  graph_tree(n, children = 2L, mode = 0L)  graph_full(n, directed = FALSE, mutual = FALSE)  graph_famous(name)"},{"path":"/reference/generators.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Deterministic Graph Generators — graph_create","text":"https://igraph.org/c/doc/igraph-Generators.html","code":""},{"path":"/reference/generators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deterministic Graph Generators — graph_create","text":"edges edges add, first two elements first edge, etc. n Integer, number vertices graph. directed Boolean mode Integer; igraph_star_mode_t {0: , 1: , 2: MUTUAL, 3: UNDIRECTED} igraph_tree_mode_t {0: , 1: , 2: UNDIRECTED} center Id vertex center graph. dim Vector giving sizes lattice dimensions. nei Integer distance within two vertices connected. mutual Boolean circular Boolean children Integer, number children vertex tree. name {Bull, Chvatal, Coxeter, Cubical, Diamond, Dodecahedral, Dodecahedron, Folkman, Franklin, Frucht, Grotzsch, Heawood, Herschel, House, HouseX, Icosahedral, Icosahedron, Krackhardt_Kite, Levi, McGee, Meredith, Noperfectmatching, Nonline, Octahedral, Octahedron, Petersen, Robertson, Smallestcyclicgroup, Tetrahedral, Tetrahedron, Thomassen, Tutte, Uniquely3colorable, Walther, Zachary}","code":""},{"path":[]},{"path":"/reference/igraph-class.html","id":null,"dir":"Reference","previous_headings":"","what":"igraph_ptr class: thin wrapper of igraph_t. — igraph_ptr","title":"igraph_ptr class: thin wrapper of igraph_t. — igraph_ptr","text":"igraph_ptr class: thin wrapper igraph_t.","code":""},{"path":"/reference/igraph-class.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"igraph_ptr class: thin wrapper of igraph_t. — igraph_ptr","text":"external pointer C++ IGraph class object.","code":""},{"path":"/reference/igraph-class.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"igraph_ptr class: thin wrapper of igraph_t. — igraph_ptr","text":"https://github.com/igraph/igraph/blob/master/include/igraph_datatype.h","code":""},{"path":[]},{"path":"/reference/igraphlite-package.html","id":null,"dir":"Reference","previous_headings":"","what":"igraphlite: Lightweight R Interface to Igraph Network Analysis Library — igraphlite-package","title":"igraphlite: Lightweight R Interface to Igraph Network Analysis Library — igraphlite-package","text":"cpp11-powered R package interface igraph network analysis library. fork existing R igraph package, reboot scratch striving good performance, simple codebase, consistency C implementation.","code":""},{"path":[]},{"path":"/reference/igraphlite-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"igraphlite: Lightweight R Interface to Igraph Network Analysis Library — igraphlite-package","text":"Maintainer: Watal M. Iwasaki heavywatal@gmail.com (ORCID)","code":""},{"path":"/reference/is_igraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is igraph_ptr class — is_igraph","title":"Check if an object is igraph_ptr class — is_igraph","text":"Check object igraph_ptr class","code":""},{"path":"/reference/is_igraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is igraph_ptr class — is_igraph","text":"","code":"is_igraph(x)"},{"path":"/reference/is_igraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is igraph_ptr class — is_igraph","text":"x object tested.","code":""},{"path":"/reference/layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Layouts for Graph Drawing — layout_nicely","title":"Layouts for Graph Drawing — layout_nicely","text":"Layouts Graph Drawing","code":""},{"path":"/reference/layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layouts for Graph Drawing — layout_nicely","text":"","code":"layout_nicely(graph, ...)  layout_random(graph)  layout_drl(graph)  layout_fruchterman_reingold(graph, grid = 2L)  layout_mds(graph)  layout_reingold_tilford(graph, mode = 1L, roots = integer(0))  layout_reingold_tilford_circular(graph, mode = 1L, roots = integer(0))"},{"path":"/reference/layout.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Layouts for Graph Drawing — layout_nicely","text":"https://igraph.org/c/doc/igraph-Layout.html","code":""},{"path":"/reference/layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layouts for Graph Drawing — layout_nicely","text":"graph igraph_ptr object. ... Passed internal layout function. grid Whether use (fast less accurate) grid based version; {0: GRID, 1: NOGRID, 2: AUTOGRID}. mode Edge type count; {1: , 2: , 3: }. roots Root vertices.","code":""},{"path":"/reference/neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighborhood of vertices — neighborhood_size","title":"Neighborhood of vertices — neighborhood_size","text":"Neighborhood vertices","code":""},{"path":"/reference/neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighborhood of vertices — neighborhood_size","text":"","code":"neighborhood_size(   graph,   vids = integer(0),   order = 1L,   mode = 1L,   mindist = 0L )  neighborhood(graph, vids = integer(0), order = 1L, mode = 1L, mindist = 0L)"},{"path":"/reference/neighborhood.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Neighborhood of vertices — neighborhood_size","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighborhood of vertices — neighborhood_size","text":"graph igraph_ptr object. vids Vertices interest. order integer mode Edge type count; {1: , 2: , 3: }. mindist minimum distance include vertex counting.","code":""},{"path":"/reference/phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between phylo and igraph — as_igraph.phylo","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"Conversion phylo igraph","code":""},{"path":"/reference/phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"","code":"# S3 method for phylo as_igraph(x)  as_phylo(x)"},{"path":"/reference/phylo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"https://cran.r-project.org/package=ape","code":""},{"path":"/reference/phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between phylo and igraph — as_igraph.phylo","text":"x object convert.","code":""},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for quick visualization — augment.igraph_ptr","title":"Methods for quick visualization — augment.igraph_ptr","text":"Methods quick visualization","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for quick visualization — augment.igraph_ptr","text":"","code":"# S3 method for igraph_ptr augment(x, layout = NULL, ...)  # S3 method for igraph_ptr plot(x, ..., lwd = 0.5, cex = 5, col = \"#cccccc\", pch = 16)"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for quick visualization — augment.igraph_ptr","text":"x igraph_ptr object. layout function resulting data.frame. provided, layout_nicely() applied. ... passed augment() layout function. lwd passed ggplot2::geom_segment(). cex, col, pch passed ggplot2::geom_point() ggplot2::geom_text().","code":""},{"path":"/reference/random.html","id":null,"dir":"Reference","previous_headings":"","what":"Random numbers — igraph_rng_seed","title":"Random numbers — igraph_rng_seed","text":"Random numbers","code":""},{"path":"/reference/random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random numbers — igraph_rng_seed","text":"","code":"igraph_rng_seed(seed)"},{"path":"/reference/random.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Random numbers — igraph_rng_seed","text":"https://igraph.org/c/doc/igraph-Random.html","code":""},{"path":"/reference/random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random numbers — igraph_rng_seed","text":"seed integer.","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment","code":""},{"path":"/reference/s3-method.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 methods to get and view internal data. — as.data.frame.igraph_ptr","title":"S3 methods to get and view internal data. — as.data.frame.igraph_ptr","text":"S3 methods get view internal data.","code":""},{"path":"/reference/s3-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 methods to get and view internal data. — as.data.frame.igraph_ptr","text":"","code":"# S3 method for igraph_ptr as.data.frame(x, ...)  # S3 method for igraph_ptr as.matrix(x, ...)  # S3 method for igraph_ptr print(x, ...)"},{"path":"/reference/s3-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 methods to get and view internal data. — as.data.frame.igraph_ptr","text":"x igraph_ptr object. ... passed methods.","code":""},{"path":[]},{"path":"/reference/shortest_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortest Path Related Functions — distances","title":"Shortest Path Related Functions — distances","text":"Shortest Path Related Functions","code":""},{"path":"/reference/shortest_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortest Path Related Functions — distances","text":"","code":"distances(   graph,   from = integer(0L),   to = from,   weights = numeric(0L),   mode = 3L,   algorithm = c(\"auto\", \"unweighted\", \"dijkstra\", \"bellman-ford\", \"johnson\") )  get_shortest_paths(   graph,   from,   to = integer(0L),   weights = numeric(0L),   mode = 3L )  get_all_shortest_paths(   graph,   from,   to = integer(0L),   weights = numeric(0L),   mode = 3L )  get_all_simple_paths(graph, from, to = integer(0L), cutoff = -1L, mode = 3L)  average_path_length(graph, directed = FALSE)  path_length_hist(graph, directed = FALSE)"},{"path":"/reference/shortest_paths.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Shortest Path Related Functions — distances","text":"https://igraph.org/c/doc/igraph-Structural.html","code":""},{"path":"/reference/shortest_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortest Path Related Functions — distances","text":"graph igraph_ptr object. Vertices interest. Vertices interest. weights Numeric edge weights; TRUE use Eattr(graph, \"weight\"). mode Edge type count; {1: , 2: , 3: }. algorithm character cutoff integer directed Boolean, whether consider directed paths. Ignored undirected graphs.","code":""},{"path":"/reference/sink.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcuts to get sink/source vertices. — is_sink","title":"Shortcuts to get sink/source vertices. — is_sink","text":"Shortcuts get sink/source vertices.","code":""},{"path":"/reference/sink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcuts to get sink/source vertices. — is_sink","text":"","code":"is_sink(graph)  is_source(graph)  Vsink(graph)  Vsource(graph)"},{"path":"/reference/sink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcuts to get sink/source vertices. — is_sink","text":"graph igraph_ptr object.","code":""},{"path":"/reference/tbl_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"Conversion tbl_tree igraph","code":""},{"path":"/reference/tbl_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"","code":"# S3 method for tbl_tree as_igraph(x)  as_tbl_tree(x)"},{"path":"/reference/tbl_tree.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"https://cran.r-project.org/package=tidytree","code":""},{"path":"/reference/tbl_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between tbl_tree and igraph — as_igraph.tbl_tree","text":"x object convert.","code":""},{"path":"/reference/version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and return igraph version.h — igraph_version","title":"Check and return igraph version.h — igraph_version","text":"Check return igraph version.h","code":""},{"path":"/reference/version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and return igraph version.h — igraph_version","text":"","code":"igraph_version()"},{"path":"/reference/version.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Check and return igraph version.h — igraph_version","text":"https://igraph.org/c/doc/igraph-Nongraph.html","code":""},{"path":"/reference/vnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between vertex IDs and names — Vnames","title":"Conversion between vertex IDs and names — Vnames","text":"Conversion vertex IDs names","code":""},{"path":"/reference/vnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between vertex IDs and names — Vnames","text":"","code":"Vnames(graph)  as_vids(graph, vnames)  as_vnames(graph, vids = V(graph))"},{"path":"/reference/vnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between vertex IDs and names — Vnames","text":"graph igraph_ptr object. vnames Vertex names stored Vattr[[\"name\"]]. vids Vertices interest.","code":""}]
