% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/structural-components.R
\name{components}
\alias{components}
\alias{subcomponent}
\alias{connected_components}
\alias{is_connected}
\alias{count_reachable}
\alias{transitive_closure}
\alias{articulation_points}
\alias{bridges}
\alias{is_biconnected}
\alias{subcomponents}
\title{Graph Components}
\source{
\url{https://igraph.org/c/doc/igraph-Structural.html#graph-components}
}
\usage{
subcomponent(graph, vid, mode = 1L)

connected_components(graph, connectedness = 1L)

is_connected(graph, connectedness = 1L)

count_reachable(graph, mode = 1L)

transitive_closure(graph)

articulation_points(graph)

bridges(graph)

is_biconnected(graph)

subcomponents(graph, vids, mode = 1L)
}
\arguments{
\item{graph}{An \code{\link{igraph_ptr}} object.}

\item{vid}{An integer value of vertex ID.}

\item{mode}{An integer value of edge type to count; \{1: OUT, 2: IN, 3: ALL\}.}

\item{connectedness}{An integer indicating the type of connectedness:
\{1: WEAK (ignore edge directions), 2: STRONG\}}

\item{vids}{An integer vector of vertex IDs.}
}
\value{
\code{subcomponent()} returns the IDs of the vertices reachable from the
given vertex.

\code{connected_components()} returns component IDs for each vertex.

\code{is_connected()} and \code{is_biconnected()} return logical values.

\code{count_reachable()} returns an integer vector of the number of
reachable vertices from each vertex including itself.

\code{transitive_closure()} returns the transitive closure graph.

\code{articulation_points()} and \code{bridges()} return vertex IDs and edge IDs,
respectively.

\code{subcomponents()} returns a list of integer vectors by applying
\code{subcomponent()} for each vertex in \code{vids}.
}
\description{
Graph Components
}
\examples{
g = graph_tree(5L)
subcomponent(g, 2L)

connected_components(g)

is_connected(g)

count_reachable(g)

transitive_closure(g)

articulation_points(g)

bridges(g)

is_biconnected(g)

subcomponents(g, c(1L, 2L))
}
\seealso{
\code{\link[=induced_subgraph]{induced_subgraph()}}
}
