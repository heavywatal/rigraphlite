% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic-add-delete.R
\name{add-delete}
\alias{add-delete}
\alias{add_edges}
\alias{add_vertices}
\alias{delete_edges}
\alias{delete_vertices}
\title{Adding and deleting vertices and edges}
\source{
\url{https://igraph.org/c/html/latest/igraph-Basic.html#adding-and-deleting-vertices-and-edges}
}
\usage{
add_edges(graph, edges)

add_vertices(graph, n)

delete_edges(graph, eids)

delete_vertices(graph, vids)
}
\arguments{
\item{graph}{An \code{\link{igraph_ptr}} object.}

\item{edges}{An integer vector of vertex IDs; the first two elements are the first edge, etc.}

\item{n}{An integer, the number of vertices to add.}

\item{eids}{An integer vector of edge IDs.}

\item{vids}{An integer vector of vertex IDs.}
}
\value{
A shallow copy of the modified \code{\link{igraph_ptr}} object.
}
\description{
Unlike many other R functions, these functions modify a graph in place.
The shallow copy of the graph is returned invisibly, which can be used with
the pipe operator, but does not need to be assigned to a variable.
}
\examples{
g = graph_empty()

# The graph is modified in place
add_vertices(g, 6L)
add_edges(g, c(1L, 2L))
g

# Invisibly returned objects can be used with the pipe operator.
g |>
 add_edges(c(3L, 4L)) |>
 delete_edges(1L) |>
 delete_vertices(6L) |>
 print()

# No need to assign the result
g
}
\seealso{
\code{\link[=graph_copy]{graph_copy()}} for shallow vs. deep copy of graph objects.
}
