% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isomorphism.R
\name{permutation}
\alias{permutation}
\alias{canonical_permutation}
\alias{permutate_vertices}
\title{Permute the vertices}
\source{
\url{https://igraph.org/c/html/latest/igraph-Isomorphism.html#igraph_permute_vertices}
}
\usage{
canonical_permutation(graph, colors = integer(0L))

permutate_vertices(graph, permutation)
}
\arguments{
\item{graph}{An \code{\link{igraph_ptr}} object.}

\item{colors}{An optional vertex color vector in integer.}

\item{permutation}{An integer vector,
whose i-th element specifies the index of the vertex in the original graph
that will become vertex i in the new graph.}
}
\value{
\code{canonical_permutation()} returns an integer vector.

\code{permutate_vertices()} returns an \code{\link{igraph_ptr}} object
isomorphic to the input \code{graph}.
}
\description{
Call \code{permutate_vertices()} with the output of \code{canonical_permutation()}
to create the canonical form of a graph.
Note that the edge order may differ even after canonicalization.
}
\examples{
g1 = graph_create(c(1L, 2L, 1L, 3L), directed = FALSE)
g2 = graph_create(c(3L, 2L, 3L, 1L), directed = FALSE)
isomorphic(g1, g2)
is_same_graph(g1, g2)
# as.matrix(g1) and as.matrix(g2) may differ

g1can = permutate_vertices(g1, canonical_permutation(g1))
g2can = permutate_vertices(g2, canonical_permutation(g2))
is_same_graph(g1can, g2can)

isomorphic(g1, permutate_vertices(g1, c(3L, 2L, 1L)))
}
\seealso{
\code{\link[=topological_sorting]{topological_sorting()}}.
}
