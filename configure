#!/bin/sh
echo "R_PACKAGE_DIR: $R_PACKAGE_DIR"
echo "IGRAPH_INSTALL_PREFIX: ${IGRAPH_INSTALL_PREFIX:=${R_PACKAGE_DIR}}"

if [ -e "${IGRAPH_INSTALL_PREFIX}/include/igraph/igraph.h" ]; then
  echo "Using preinstalled igraph: ${IGRAPH_INSTALL_PREFIX}"
else
  if [ -e ".git" ]; then
    # source repo
    IGRAPH_SOURCE="src/igraph"
  else
    # bundled package
    BUILD_DIR="${R_SESSION_TMPDIR}/../igraphlite"
    IGRAPH_SOURCE="${BUILD_DIR}/igraph"
  fi
  echo "IGRAPH_SOURCE: ${IGRAPH_SOURCE}"
  if [ -e "$IGRAPH_SOURCE" ]; then
    git -C $IGRAPH_SOURCE pull --ff-only
  else
    IGRAPH_REMOTE="https://github.com/heavywatal/igraph.git"
    git clone --depth=1 --single-branch $IGRAPH_REMOTE $IGRAPH_SOURCE
  fi
  cd $IGRAPH_SOURCE
  autoconf --version || brew install autoconf
  automake --version || brew install automake
  if ! autoconf --version >/dev/null || ! automake --version >/dev/null; then
    echo 'Please install "autoconf" and "automake" to build this package.'
    echo 'The easiest way is to use Homebrew (https://brew.sh/):'
    echo '  brew install autoconf automake'
    echo 'Otherwise, follow the official instruction:'
    echo '  https://www.gnu.org/software/autoconf/'
    echo '  https://www.gnu.org/software/automake/'
    exit 1
  fi
  ./bootstrap.sh
  ./configure --prefix=$IGRAPH_INSTALL_PREFIX --disable-static --with-external-blas --with-external-lapack >/dev/null
  make ${MAKEFLAGS:=-j2} install 2>/dev/null
  cd $OLDPWD
fi

CPPFLAGS="-I${IGRAPH_INSTALL_PREFIX}/include"
LIBDIR="${IGRAPH_INSTALL_PREFIX}/lib"
LDFLAGS="-L${LIBDIR} -Wl,-rpath,${LIBDIR}"
LDLIBS="-ligraph"

cat src/Makevars.in | \
  sed 's|@CPPFLAGS@|'"${CPPFLAGS}"'|' | \
  sed 's|@LDFLAGS@|'"${LDFLAGS}"'|' | \
  sed 's|@LDLIBS@|'"${LDLIBS}"'|' > src/Makevars
