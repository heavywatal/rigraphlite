# Generated by roxygen2: do not edit by hand

S3method(as.data.frame,igraph_ptr)
S3method(as.matrix,igraph_ptr)
S3method(as_igraph,data.frame)
S3method(as_igraph,default)
S3method(as_igraph,matrix)
S3method(as_igraph,phylo)
S3method(as_igraph,tbl_tree)
S3method(augment,igraph_ptr)
S3method(plot,igraph_ptr)
S3method(print,igraph_ptr)
export("Eattr<-")
export("Vattr<-")
export(E)
export(Eattr)
export(V)
export(Vattr)
export(Vnames)
export(Vsink)
export(Vsource)
export(add_edges)
export(add_vertices)
export(are_adjacent)
export(articulation_points)
export(as_adjlist)
export(as_igraph)
export(as_inclist)
export(as_phylo)
export(as_tbl_tree)
export(as_vids)
export(as_vnames)
export(augment)
export(average_local_efficiency)
export(average_path_length)
export(betweenness)
export(bridges)
export(canonical_permutation)
export(clique_number)
export(clique_size_hist)
export(cliques)
export(closeness)
export(connected_components)
export(constraint)
export(convergence_degree)
export(count_loops)
export(count_multiple)
export(count_reachable)
export(degree)
export(degree_sequence_game)
export(delete_edges)
export(delete_vertices)
export(diameter)
export(distances)
export(eccentricity)
export(ecount)
export(edge)
export(edge_betweenness)
export(edge_betweenness_subset)
export(edges)
export(eigenvector_centrality)
export(erdos_renyi_game_gnm)
export(erdos_renyi_game_gnp)
export(expand_path_to_pairs)
export(find_common_ancestors)
export(get_all_eids_between)
export(get_all_shortest_paths)
export(get_all_simple_paths)
export(get_eids)
export(get_shortest_paths)
export(girth)
export(global_efficiency)
export(graph_circulant)
export(graph_copy)
export(graph_create)
export(graph_cycle)
export(graph_empty)
export(graph_famous)
export(graph_from_data_frame)
export(graph_from_edgelist)
export(graph_from_symbolic_edgelist)
export(graph_full)
export(graph_hexagonal_lattice)
export(graph_hypercube)
export(graph_kary_tree)
export(graph_lattice)
export(graph_lcf)
export(graph_path)
export(graph_ring)
export(graph_square_lattice)
export(graph_star)
export(graph_tree)
export(graph_triangular_lattice)
export(harmonic_centrality)
export(has_loop)
export(has_multiple)
export(hub_and_authority_scores)
export(igraph_from)
export(igraph_rng_seed)
export(igraph_to)
export(igraph_version)
export(incident)
export(independence_number)
export(independent_vertex_sets)
export(induced_subgraph)
export(induced_subgraph_edges)
export(is_acyclic)
export(is_biconnected)
export(is_clique)
export(is_complete)
export(is_connected)
export(is_dag)
export(is_directed)
export(is_eulerian)
export(is_igraph)
export(is_independent_vertex_set)
export(is_same_graph)
export(is_simple)
export(is_sink)
export(is_source)
export(isomorphic)
export(k_regular_game)
export(largest_cliques)
export(largest_independent_vertex_sets)
export(layout_circle)
export(layout_drl)
export(layout_fruchterman_reingold)
export(layout_grid)
export(layout_mds)
export(layout_nicely)
export(layout_random)
export(layout_reingold_tilford)
export(layout_reingold_tilford_circular)
export(layout_star)
export(local_efficiency)
export(maxdegree)
export(maximal_cliques)
export(maximal_cliques_count)
export(maximal_cliques_hist)
export(maximal_independent_vertex_sets)
export(neighborhood)
export(neighborhood_size)
export(neighbors)
export(pagerank)
export(path_length_hist)
export(permutate_vertices)
export(radius)
export(read_graph)
export(read_graph_dl)
export(read_graph_edgelist)
export(read_graph_gml)
export(read_graph_graphml)
export(read_graph_lgl)
export(read_graph_ncol)
export(read_graph_pajek)
export(rewire)
export(rewire_edges)
export(strength)
export(subcomponent)
export(subcomponents)
export(subgraph_from_edges)
export(subisomorphic)
export(topological_sorting)
export(transitive_closure)
export(upstream_vertices)
export(vcount)
export(watts_strogatz_game)
export(write_graph)
export(write_graph_dot)
export(write_graph_edgelist)
export(write_graph_gml)
export(write_graph_graphml)
export(write_graph_leda)
export(write_graph_lgl)
export(write_graph_ncol)
export(write_graph_pajek)
importFrom(generics,augment)
importFrom(rlang,.data)
useDynLib(igraphlite, .registration = TRUE)
